---
title: "Exercise 05"
format: html
editor: visual
---

## Prelims

```{r}
#| eval: true
#| output: false
library(tidyverse)
library(dplyr)
library(ggplot2)
library(mosaic)
library(tidyr)
library(patchwork)
library(purrr)
```

# Challenge 1

## Step 1: Reading the Data

```{r}
d <- read_csv("IMDB-movies.csv")
```

## Step 2: Filtering the Data

```{r}
filtered_data <- d %>%
  filter(runtimeMinutes >= 60 & runtimeMinutes <= 180, startYear >=  1920 & startYear <= 1979) %>%
  mutate(Decade = floor(startYear/10)*10)
```

## Step 3: Histogram of Movie Length Frequency by Decade

```{r}

Histogram1 <- ggplot(filtered_data, aes(x = runtimeMinutes)) +
  geom_histogram(aes(binwidth = (max(runtimeMinutes) - min(runtimeMinutes)) / 10), alpha = 0.5) +
  facet_wrap(~Decade, scales = "free") +
  labs(title = "Distribution of Movie Length by Decade", 
       x= "Movie Length in Minutes",
       y= "Frequency") +
  theme(plot.title = element_text(hjust = 0.5))

print(Histogram1)
```

## Step 4: Population Mean and Standard Deviation

```{r}
Results <- filtered_data %>%
  group_by(Decade) %>%
  summarise(
    pop_mean = mean(runtimeMinutes), 
    pop_sd= sd(runtimeMinutes))

print(Results)
```

## Step 5: Single Sample Mean and Standard Deviation

```{r}
Sample <- filtered_data %>%
  group_by(Decade) %>%
  slice_sample(n=100) %>%
  summarise(
    sample_mean = mean(runtimeMinutes), 
    sample_sd = sd(runtimeMinutes))

print(Sample)
```

## Step 6: Standard Error for the Sample Mean

```{r}
Sample <- mutate(Sample, sample_se = sample_sd / sqrt(100))

print(Sample)
```

## Step 7: Comparison of Sample and Population Mean and Standard Deviation

```{r}
Results <- mutate(Results, pop_se = Results$pop_sd/sqrt(100))

Results$z_score <- (Sample$sample_mean - Results$pop_mean) / Results$pop_se

Results$p_score <- 2 * (1 - pnorm(abs(Results$z_score)))

Compare_Table <- merge(Results, Sample, by = "Decade")
print(Compare_Table)
```

I used a z-test to compare the means of runtimeMinutes for the population and the single sample. This gave me z-scores for each decade, which I used to calculate the p-value for the z-score for each decade.

*For the z-score:*

Across all decades, the z-scores range from about -1 to 1. However, only a few scores are around 1 or -1, all other scores fell around 0, which means that the means are almost exactly equal for each decade.

*For the p-value:*

The Null Hypothesis: the means are equal to each other

The Alternative Hypothesis: the means are significantly different to each other

Across all decades, the p-values are above 0.05. Even the lowest p-value score is high enough that there is not enough evidence to reject the null hypothesis, as it is greater than 0.05. Therefore, there is no significant difference between the means for each decade.

## Step 8: Sampling Distribution

```{r}
reps <- 1000

DistSample <- filtered_data %>%
  group_by(Decade) %>%
  do({
    do(reps) * {
      EachSample <- slice_sample(., n = 100, replace = FALSE)
      summarise(EachSample, 
                DistSample_mean = mean(runtimeMinutes),
                DistSample_sd = sd(runtimeMinutes))
    }
  })%>%
  ungroup() %>%
  select(-.row, -.index)

print(DistSample)
```

## Step 9: Sampling Distribution Mean and Standard Deviation

```{r}
DistSample_Results <- DistSample %>%
group_by(Decade) %>%
  summarise(
    distributionsample_mean = mean(DistSample_mean),
    distributionsample_sd = sd(DistSample_mean))

print(DistSample_Results)

Histogram2 <- ggplot(DistSample, aes(x = DistSample_mean)) +
  geom_histogram(aes(
    binwidth = (max(DistSample$DistSample_mean) - min(DistSample$DistSample_mean)) / 10), alpha = 0.5) +
  facet_wrap(~Decade, scales = "free") +
  labs(title = "Distribution of Average Movie Length per Decade",
       subtitle = "From Sampling Distribution",
       x = "Average Movie Length in Minutes",
       y = "Frequency in Sampling Distribution") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))

print(Histogram2)
```

## Step 10: Comparison of Standard Error for Single Sample, Population, and Sampling Distribution

```{r}
#Join all pop, sample, and sampling distribution info into one tibble to make it easier...

Complete <- Results %>%
  left_join(Sample, by = "Decade") %>%
  left_join(DistSample_Results, by = "Decade")

CompleteCompare <- Complete %>%
  mutate(
    
  z_pop_sample = Results$z_score,
  
  p_pop_sample = 2 * (1 - pnorm(abs(z_pop_sample))),
  
  z_pop_dist = (Complete$distributionsample_mean - Complete$pop_mean) / Complete$pop_se,
  
  p_pop_dist = 2 * (1 - pnorm(abs(z_pop_dist))),
  
  z_sample_dist = (Complete$distributionsample_mean - Complete$sample_mean) / Complete$distributionsample_sd,
  
  p_sample_dist = 2 *(1 - pnorm(abs(z_sample_dist)))
   ) 

CompleteCompare <- CompleteCompare %>%
  select(Decade, pop_mean, sample_mean, distributionsample_mean, z_pop_sample, p_pop_sample, z_pop_dist, p_pop_dist, z_sample_dist, p_sample_dist)

print(CompleteCompare)
```

I used a z-test to compare the means of runtimeMinutes for the population, the single sample, and the sampling distribution during each decade. I calculated z-scores for population and single sample means, population and sampling distribution means, and single sample and sampling distribution means. This gave me three z-scores for each decade, which I used to calculate the p-value for each z-score for each decade.

*For the z-score:*

Across all comparisons, the z-scores range from about -1 to 1. However, most scores fell around 0, which means that the three means are almost exactly equal, only a few z-scores were above or below 0 by more than a few decimal points.

*For the p-value:*

The Null Hypothesis: the means are equal to each other

The Alternative Hypothesis: the means are significantly different to each other

Across all comparisons, the p-values are above 0.05. Even the lowest p-value score is high enough that there is not enough evidence to reject the null hypothesis. Therefore, there is no significant difference between the means for the population, the single sample, and the sampling distribution.

# Challenge 2

## Step 1: Reading the file

```{r}
e <- "https://raw.githubusercontent.com/difiore/ada-datasets/main/zombies.csv"
z <- read_csv(e)
```

## Step 2: Population Mean and Standard Deviation

```{r}
z_long <- z %>%
  pivot_longer(cols = c("height", "weight", "zombies_killed", "years_of_education", "age"), 
               names_to = "variable", 
               values_to = "value")

calc_sd <- function(x){   
  sqrt(sum((x - mean(x))^2) / length(x)) }

z_pop_results <- z_long %>%
  group_by(variable) %>%
  summarise(
    z_pop_mean = mean(value, na.rm = TRUE), 
    z_pop_sd= calc_sd(value)
  )

print(z_pop_results)
```

## Step 3: Boxplots of Each Variable by Gender

```{r}
z_Box1 <- ggplot(z_long, aes(x=gender, y=value, fill=gender)) +
  geom_boxplot() +   
  facet_wrap(~variable, scales = "free_y") +   
  labs(     
    title = "Boxplot of Variables by Gender",     
    x = "Gender",     y = "Value"   ) +   
  theme_minimal() +   
  theme(     
    plot.title = element_text(hjust = 0.5),     
    legend.position = "none"     
    )  
print(z_Box1)
```

## Step 4: Scatter Plots for Height and Weight in Relation to Age

```{r}
z_Scat1 <- ggplot(z, aes(x = age, y = weight, color = factor(gender))) +   
  geom_point() +   
  geom_smooth(method = "lm", se = FALSE, color = "black", size = 0.5) +   
  labs(     title = "Relationship Between Weight and Age",     x = "Age",     y = "Weight",     color = "Gender"   ) +   
  theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")  


z_Scat2 <- ggplot(z, aes(x = age, y = height, color = factor(gender))) +   
  geom_point() +   
  geom_smooth(method = "lm", se = FALSE, color = "black", size = 0.5) +   
  labs(     title = "Relationship Between Height and Age",     x = "Age",     y = "Height",     color = "Gender"   ) +   
  theme(plot.title = element_text(hjust = 0.5), legend.position = "bottom")  

z_Scat_1_2 <- z_Scat1 + z_Scat2  

print(z_Scat_1_2)
```

## Step 5: Histograms and Q-Q Plots for Each Variable

```{r}
z_Hist1 <- ggplot(z_long, aes(x = value)) +   
  geom_histogram(binwidth = 1, alpha = 0.5) +   
  facet_wrap(~variable, scales = "free") +   
  labs(
    title = "Distribution of Variables",         
    y= "Frequency"
    ) +   
  theme(plot.title = element_text(hjust = 0.5)) 

print(z_Hist1)  

z_QQ1 <- ggplot(z_long, aes(sample = value))+   
  stat_qq()+   
  stat_qq_line()+   
  facet_wrap(~variable, scales = "free")+   
  labs(     
    title = "Q-Q Plots for Quantitative Variables",     
    y = "Sample Quantiles",     
    x = "Theoretical Quantiles"       
    )+   
  theme(plot.title = element_text(hjust = 0.5))  

print(z_QQ1)
```

## Step 6: Single Sample Mean, Standard Deviation, Standard Error, and Theoretical 95% CI

```{r}
z_single <- z_long %>%
  distinct(id) %>%
  slice_sample(n=50) %>%
  left_join(z_long, by = "id")

print(z_single)

z_single_results <- z_single %>%
  group_by(variable) %>%
  summarise(
    z_single_m = mean(value),
    z_single_sd = sd(value),
    z_single_se = z_single_sd / sqrt(50),
    z_single_95ci_lo = z_single_m + qnorm(0.025) * z_single_se,
    z_single_95ci_up = z_single_m + qnorm(0.975) * z_single_se
  )

print(z_single_results)
  
```

## Step 7: Sampling Distribution Mean and Standard Deviation and Comparison 

```{r}

z_single_results <- z_single_results %>%
  rename(z_sampling_m = z_single_m, z_sampling_sd = z_single_sd)

z_single_results_selected <- z_single_results %>%
  select(variable, z_sampling_m, z_sampling_sd)

z_sampling <- map(1:199, ~{
    z_sampling_temp <- z_long %>%
      distinct(id) %>%
      slice_sample(., n=50) %>%
      left_join(z_long, by = "id")
    
    z_sampling_temp_results <- z_sampling_temp %>%
      group_by(variable) %>%
      summarise(
        z_sampling_m = mean(value),
        z_sampling_sd = sd(value)
      )
    z_sampling_temp_results
    
  }) %>%
  bind_rows() %>%
  bind_rows(z_single_results_selected)

print(z_sampling)

z_single_results <- z_single_results %>%
  rename(z_single_m = z_sampling_m, z_single_sd = z_sampling_sd)


z_sampling_results <- z_sampling %>%
  group_by(variable) %>%
  summarise(
    z_sampling_results_m = mean(z_sampling_m),
    z_sampling_results_sd = sd(z_sampling_sd)
  )

print(z_sampling_results)

z_scores <- z_sampling_results %>%
  mutate(
    z_score = (z_sampling_results_m - z_single_results$z_single_m) / z_single_results$z_single_se
  )

print(z_scores)

z_final_tibble <- z_sampling_results %>%
  select(variable, z_sampling_results_sd) %>%
  left_join(z_single_results %>% 
              select(variable, z_single_se), by = "variable") %>%
  left_join(z_scores %>% 
              select(variable, z_score), by = "variable")
print(z_final_tibble)
```

The means and Standard deviations of each variable of the sample distribution can be seen in the tibble called "z_sampling_results." Generally, the standard deviation values for all variables of the distribution sample are barely above 0 (only a few decimal points) and the standard error for all variables of the single sample are also barely above 0. The only exception to both of these calculations are the values relating to the variable weight.

The low value for the standard deviation means that all the values for each variable are similar to each other. In other words, their is very little variation between the values of each variable. This is also seen in the data itself, for example the range of age is only of about 20 years (the youngest person is 10 and the oldest almost 30). Given the short range, all values for age are relatively close to the mean and, thus the standard deviation is low. The same can be said for height, years of education, and zombies killed.

The only variable with a larger range of values is weight (from 90 to 210). As a result, the standard deviation of the samling distribution and the standard error of the single sample for this variable are a bit higher than the results of the other variables. Both the standard deviation of the sampling distribution and the standard error of the single sample are above 1 (even if only by a few decimals), which reflects the variability of the values for weight.

Lastly, the z-scores are all near 0, only a few negative decimal points away from 0. This means that, regardless of the variability of the values for the different variables, the means of the single sample and the sampling distribution are both quite similar, though not identical (z-score =/= 0).

## Step 8: Plot of Means of Sampling Distribution for Each Variable

```{r}

z_Hist2 <- ggplot(z_sampling, aes(x = z_sampling_m)) +
  geom_histogram(binwidth = 1, alpha = 0.5) +   
  facet_wrap(~variable, scales = "free") +   
  labs(
    title = "Sampling Distribution of Means by Variables",         
    x = "Sample Mean",
    y= "Frequency"
    ) +   
  theme(plot.title = element_text(hjust = 0.5)) 

print(z_Hist2)

print(z_Hist1)
```

The variables that appeared to have less of a normal distribution look more normally distributed now, but that might be because there is very little variability in the values of the means of the samples in the sampling distribution. Interestingly the weight variable looked more normally distributed in the first histogram, in this histogram there appears to be a gap around 143, where there are less means with that value in the sampling distribution.

## Step 9: 95% Confidence Interval

```{r}
z_sampling_results <- z_sampling_results %>%
  left_join(
  z_sampling %>%
  group_by(variable) %>%
  summarise(
    z_sampling_ci_lo = quantile(z_sampling_m, 0.025),
    z_sampling_ci_up = quantile(z_sampling_m, 0.975)
  ),
  by = "variable")

print(z_sampling_results)

print(z_single_results)
```

Although the CIs for each variable are very different, none of the CIs are very wide, therefore the estimate appears to be quite precise. Interestingly, the CIs for the single sample and for the sampling distribution are quite similar.

## Step 10: Bootstrapping

```{r}


```
